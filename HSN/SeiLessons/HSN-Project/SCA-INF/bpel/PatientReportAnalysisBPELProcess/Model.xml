<?xml version="1.0" encoding="UTF-8"?>
<process name="PatientReportAnalysisBPELProcess" targetNamespace="http://xmlns.oracle.com/SeiLessons/HSN_Project/PatientReportAnalysisBPELProcess" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:client="http://xmlns.oracle.com/SeiLessons/HSN_Project/PatientReportAnalysisBPELProcess" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/file/SeiLessons/HSN-Project/ReceivePatientReportFileAdapter" xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:ns2="http://saude365.pt/" xmlns:ns3="http://xmlns.oracle.com/SeiLessons/HSN_Project/ValidateAddressBPELProcess" xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/SeiLessons/HSN-Project/PatientInformationDBAdapter" xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/db/SeiLessons/HSN-Project/PatientTriageDBAdapter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns8="http://saude365.pt" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns9="http://xmlns.oracle.com/SeiLessons/HSN_Project/ValidateMedicinesBPELProcess" xmlns:ns6="http://xmlns.oracle.com/pcbpel/adapter/db/SeiLessons/HSN-Project/ValidAddressFlagDBAdapter" xmlns:ns7="http://xmlns.oracle.com/SeiLessons/HSN_Project/MedicinesPrescriptionBPELProcess" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns10="http://xmlns.oracle.com/bpel/workflow/taskService" xmlns:task="http://xmlns.oracle.com/bpel/workflow/task" xmlns:wfcommon="http://xmlns.oracle.com/bpel/workflow/common" xmlns:wf="http://schemas.oracle.com/bpel/extensions/workflow" xmlns:ns11="http://xmlns.oracle.com/SeiLessons/HSN_Project/ClassifyTriageBPELProcess" xmlns:ns12="http://xmlns.oracle.com/pcbpel/adapter/db/SeiLessons/HSN-Project/UpdatePatientAddressInformationDBAdapter" xmlns:ns13="http://xmlns.oracle.com/pcbpel/adapter/jms/SeiLessons/HSN-Project/StoreInputReportJMSAdapter" id="BpPrc0">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <partnerLink name="ReceivePatientReportFileAdapter" partnerLinkType="ns1:ReadReport_plt" myRole="ReadReport_role"/>
        <partnerLink name="ValidateAddressBPELProcess.validateaddressbpelprocess_client" partnerLinkType="ns3:ValidateAddressBPELProcess" partnerRole="ValidateAddressBPELProcessProvider"/>
        <partnerLink name="PatientInformationDBAdapter" partnerLinkType="ns4:PatientInformationDBAdapter_plt" partnerRole="PatientInformationDBAdapter_role"/>
        <partnerLink name="PatientTriageDBAdapter" partnerLinkType="ns5:PatientTriageDBAdapter_plt" partnerRole="PatientTriageDBAdapter_role"/>
        <partnerLink name="ValidateMedicinesBPELProcess.validatemedicinesbpelprocess_client" partnerLinkType="ns9:ValidateMedicinesBPELProcess" partnerRole="ValidateMedicinesBPELProcessProvider"/>
        <partnerLink name="ValidAddressFlagDBAdapter" partnerLinkType="ns6:ValidAddressFlagDBAdapter_plt" partnerRole="ValidAddressFlagDBAdapter_role"/>
        <partnerLink name="MedicinesPrescriptionBPELProcess.medicinesprescriptionbpelprocess_client" partnerLinkType="ns7:MedicinesPrescriptionBPELProcess" partnerRole="MedicinesPrescriptionBPELProcessProvider"/>
        <partnerLink name="ClassifyTriageBPELProcess.classifytriagebpelprocess_client" partnerLinkType="ns11:ClassifyTriageBPELProcess" partnerRole="ClassifyTriageBPELProcessProvider"/>
        <partnerLink name="UpdatePatientAddressInformationDBAdapter" partnerLinkType="ns12:UpdatePatientAddressInformationDBAdapter_plt" partnerRole="UpdatePatientAddressInformationDBAdapter_role"/>
    </partnerLinks>
    <variables>
        <variable name="patientReportInputVariable" messageType="ns1:ReadReport_msg"/>
        <variable name="validateAddressProcessInputVariable" messageType="ns3:ValidateAddressBPELProcessRequestMessage"/>
        <variable name="validateAddressProcessOutputVariable" messageType="ns3:ValidateAddressBPELProcessResponseMessage"/>
        <variable name="patientInformationInputVariable" messageType="ns4:DoenteCollection_msg"/>
        <variable name="patientTriageDBInputVariable" messageType="ns5:TriagemCollection_msg"/>
        <variable name="validateMedicineProcessInputVariable" messageType="ns9:ValidateMedicinesBPELProcessRequestMessage"/>
        <variable name="validateMedicineProcessOutputVariable" messageType="ns9:ValidateMedicinesBPELProcessResponseMessage"/>
        <variable name="validAddressFlagDBInputVariable" messageType="ns6:DoenteCollection_msg"/>
        <variable name="medicinesAuxiliaryVariable" messageType="ns1:ReadReport_msg"/>
        <variable name="medicinesPrescriptionVariable" messageType="ns7:MedicinesPrescriptionBPELProcessRequestMessage"/>
        <variable name="classifyTriageProcessInputVariable" messageType="ns11:ClassifyTriageBPELProcessRequestMessage"/>
        <variable name="updatePatientAddressInformationInputVariable" messageType="ns12:DoenteCollection_msg"/>
    </variables>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main" id="BpSeq0">
        <!-- Receive input from requestor. (Note: This maps to operation defined in PatientReportAnalysisBPELProcess.wsdl) -->
        <receive name="receiveInput" createInstance="yes" variable="patientReportInputVariable" partnerLink="ReceivePatientReportFileAdapter" portType="ns1:ReadReport_ptt" operation="ReadReport" id="BpRcv0"/>
        <sequence name="UpdateDatabaseInformation" id="BpSeq1">
            <assign name="TransformReportToPatientInformation" id="BpAss0">
                <bpelx:annotation>
                    <bpelx:pattern>transformation</bpelx:pattern>
                </bpelx:annotation>
                <copy>
                    <from expression="ora:doXSLTransformForDoc('xsl/TransformationReportToPatientInformation.xsl', $patientReportInputVariable.body)"/>
                    <to variable="patientInformationInputVariable" part="DoenteCollection"/>
                </copy>
            </assign>
            <invoke name="InvokePatientInformationDB" inputVariable="patientInformationInputVariable" partnerLink="PatientInformationDBAdapter" portType="ns4:PatientInformationDBAdapter_ptt" operation="merge" bpelx:invokeAsDetail="no" id="BpInv0"/>
            <assign name="TransformReportToPatientTriage" id="BpAss1">
                <bpelx:annotation>
                    <bpelx:pattern>transformation</bpelx:pattern>
                </bpelx:annotation>
                <copy>
                    <from expression="ora:doXSLTransformForDoc('xsl/TransformationReportToPatientTriage.xsl', $patientReportInputVariable.body)"/>
                    <to variable="patientTriageDBInputVariable" part="TriagemCollection"/>
                </copy>
            </assign>
            <invoke name="InvokePatientTriageDB" bpelx:invokeAsDetail="no" inputVariable="patientTriageDBInputVariable" partnerLink="PatientTriageDBAdapter" portType="ns5:PatientTriageDBAdapter_ptt" operation="insert" id="BpInv1"/>
        </sequence>
        <flow name="FlowPatientReport" id="BpFlw0">
            <sequence name="ClassifyTriage" id="BpSeq2">
                <assign name="TransformReportToClassifyTriageProcessFormat" id="BpAss2">
                    <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                        <from expression="ora:doXSLTransformForDoc('xsl/TransformationReportToClassifyTriageProcessFormat.xsl', $patientReportInputVariable.body)"/>
                        <to variable="classifyTriageProcessInputVariable" part="payload"/>
                    </copy>
                </assign>
                <invoke name="InvokeClassifyTriageProcess" bpelx:invokeAsDetail="no" inputVariable="classifyTriageProcessInputVariable" partnerLink="ClassifyTriageBPELProcess.classifytriagebpelprocess_client" portType="ns11:ClassifyTriageBPELProcess" operation="process" id="BpInv2"/>
            </sequence>
            <sequence name="ValidateMedicines" id="BpSeq3">
                <assign name="AssignMedicineCopyListToValidateMedicineInput" id="BpAss3">
                    <bpelx:copyList>
                        <bpelx:from variable="patientReportInputVariable" part="body" query="/ns8:relatorio/ns8:triagem/ns8:medicamento"/>
                        <bpelx:to variable="medicinesAuxiliaryVariable" part="body" query="/ns8:relatorio/ns8:triagem/ns8:medicamento"/>
                    </bpelx:copyList>
                </assign>
                <assign name="TransformMedicineListToValidateProcessFormat" id="BpAss4">
                    <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                        <from expression="ora:doXSLTransformForDoc('xsl/TransformationMedicineListToValidateProcessFormat.xsl', $medicinesAuxiliaryVariable.body)"/>
                        <to variable="validateMedicineProcessInputVariable" part="payload"/>
                    </copy>
                </assign>
                <invoke name="InvokeValidateMedicineProcess" inputVariable="validateMedicineProcessInputVariable" partnerLink="ValidateMedicinesBPELProcess.validatemedicinesbpelprocess_client" portType="ns9:ValidateMedicinesBPELProcess" operation="process" outputVariable="validateMedicineProcessOutputVariable" bpelx:invokeAsDetail="no" id="BpInv3"/>
            </sequence>
            <sequence name="ValidateAddress" id="BpSeq4">
                <assign name="TransformReportToAddressProcess" id="BpAss5">
                    <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                        <from expression="ora:doXSLTransformForDoc('xsl/TransformationReportToAddressProcess.xsl', $patientReportInputVariable.body)"/>
                        <to variable="validateAddressProcessInputVariable" part="payload"/>
                    </copy>
                </assign>
                <invoke name="InvokeValidateAddressProcess" bpelx:invokeAsDetail="no" inputVariable="validateAddressProcessInputVariable" outputVariable="validateAddressProcessOutputVariable" partnerLink="ValidateAddressBPELProcess.validateaddressbpelprocess_client" portType="ns3:ValidateAddressBPELProcess" operation="process" id="BpInv4"/>
                <assign name="TransformValidateReplyToValidAddressFlag" id="BpAss6">
                    <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                        <from expression="ora:doXSLTransformForDoc('xsl/TransformationValidateReplyToValidAddressFlag.xsl', $patientReportInputVariable.body, 'validateAddressProcessOutputVariable.payload', $validateAddressProcessOutputVariable.payload)"/>
                        <to variable="validAddressFlagDBInputVariable" part="DoenteCollection"/>
                    </copy>
                </assign>
                <invoke name="InvokeIUpdateValidAddressFlagDB" bpelx:invokeAsDetail="no" inputVariable="validAddressFlagDBInputVariable" partnerLink="ValidAddressFlagDBAdapter" portType="ns6:ValidAddressFlagDBAdapter_ptt" operation="merge" id="BpInv5"/>
                <assign name="TransformUpdatePatientAddressInformation" bpelx:skipCondition="substring-before(bpws:getVariableData('validateAddressProcessOutputVariable','payload','/ns2:validateAddressCTTResponse/return'), '$') = 0" id="BpAss7">
                    <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                        <from expression="ora:doXSLTransformForDoc('xsl/TransformationUpdatePatientAddressInformation.xsl', $patientReportInputVariable.body, 'validateAddressProcessOutputVariable.payload', $validateAddressProcessOutputVariable.payload)"/>
                        <to variable="updatePatientAddressInformationInputVariable" part="DoenteCollection"/>
                    </copy>
                </assign>
                <invoke name="InvokeUpdatePatientAddressInformation" inputVariable="updatePatientAddressInformationInputVariable" partnerLink="UpdatePatientAddressInformationDBAdapter" portType="ns12:UpdatePatientAddressInformationDBAdapter_ptt" operation="merge" bpelx:skipCondition="substring-before(bpws:getVariableData('validateAddressProcessOutputVariable','payload','/ns2:validateAddressCTTResponse/return'), '$') = 0" bpelx:invokeAsDetail="no" id="BpInv6"/>
            </sequence>
        </flow>
        <assign name="AssignMedicinePrescription" id="BpAss8">
            <copy>
                <from expression="number(bpws:getVariableData('patientReportInputVariable','body','/ns8:relatorio/ns8:doente/ns8:id'))"/>
                <to variable="medicinesPrescriptionVariable" part="payload" query="/ns8:prescriptionElement/ns8:patientID"/>
            </copy>
            <bpelx:copyList>
                <bpelx:from variable="validateMedicineProcessOutputVariable" part="payload" query="/ns8:prescriptionElement/ns8:medicinesList"/>
                <bpelx:to variable="medicinesPrescriptionVariable" part="payload" query="/ns8:prescriptionElement/ns8:medicinesList"/>
            </bpelx:copyList>
        </assign>
        <switch name="Switch1" id="BpSwt0">
            <case condition="ora:countNodes('medicinesPrescriptionVariable','payload','/ns8:prescriptionElement/ns8:medicinesList') > 0">
                <bpelx:annotation>
                    <bpelx:general>
                        <bpelx:property name="userLabel">ExistMedicinesToPrescript</bpelx:property>
                    </bpelx:general>
                </bpelx:annotation>
                <invoke name="InvokeMedicinePrescriptionProcess" bpelx:invokeAsDetail="no" inputVariable="medicinesPrescriptionVariable" partnerLink="MedicinesPrescriptionBPELProcess.medicinesprescriptionbpelprocess_client" portType="ns7:MedicinesPrescriptionBPELProcess" operation="process" id="BpInv7"/>
            </case>
        </switch>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
    </sequence>
</process><!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sun Apr 07 19:53:05 WEST 2013
  Author:  oracle
  Type: BPEL 1.1 Process
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->