<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sun Apr 14 15:22:38 PDT 2013
  Author:  oracle
  Type: BPEL 1.1 Process
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ReceiveInvoiceStatusBPELProcess"
         targetNamespace="http://xmlns.oracle.com/SeiLessons/HSN_BO/ReceiveInvoiceStatusBPELProcess"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:client="http://xmlns.oracle.com/SeiLessons/HSN_BO/ReceiveInvoiceStatusBPELProcess"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/ftp/SeiLessons/HSN-BO/InvoiceStatusFTPAdapter"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns2="urn:netdocs:schemas:document"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns3="urn:netdocs:schemas:message"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/jms/SeiLessons/HSN-BO/StoreInvoiceStatusJMSAdapter"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/db/SeiLessons/HSN-BO/test"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns6="http://xmlns.oracle.com/pcbpel/adapter/db/top/test"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/http/SeiLessons/HSN-BO/ll">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="InvoiceStatusFTPAdapter"
                     partnerLinkType="ns1:GetInvoiceStatus_plt"
                     myRole="GetInvoiceStatus_role"/>
        <partnerLink name="StoreInvoiceStatusJMSAdapter"
                     partnerLinkType="ns4:Produce_Message_plt"
                     partnerRole="Produce_Message_role"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="ns1:GetInvoiceStatus_msg"/>
        <variable name="invoiceStatusVariable" type="xsd:string"/>
        <variable name="docStatusVariable" element="ns2:documentStatus"/>
        <variable name="documentStatusVariable" type="xsd:string"/>
        <variable name="storeInvoiceStatusJMSInputVariable"
                  messageType="ns4:Produce_Message_msg"/>
        <variable name="Variable1" element="ns2:invoice"/>
    </variables>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in ReceiveInvoiceStatusBPELProcess.wsdl) -->
        <receive name="receiveInput" variable="inputVariable" createInstance="yes"
                 partnerLink="InvoiceStatusFTPAdapter"
                 portType="ns1:GetInvoiceStatus_ptt"
                 operation="GetInvoiceStatus"/>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <assign name="TransformToInvoiceStatus">
            <bpelx:annotation>
                <bpelx:pattern>transformation</bpelx:pattern>
            </bpelx:annotation>
            <copy>
                <from expression="ora:doXSLTransformForDoc('xsl/TransformationToInvoiceStatus.xsl', $inputVariable.body)"/>
                <to variable="docStatusVariable"/>
            </copy>
        </assign>
        <assign name="AssignDocStatus">
            <copy>
                <from expression="string(bpws:getVariableData('docStatusVariable','/ns2:documentStatus/statusInformation/status'))"/>
                <to variable="documentStatusVariable"/>
            </copy>
        </assign>
        <switch name="SwitchAcceptedDocument">
            <case condition="bpws:getVariableData('documentStatusVariable') = 'ACCEPTED'">
                <bpelx:annotation>
                    <bpelx:general>
                        <bpelx:property name="userLabel">Document Accepted?</bpelx:property>
                    </bpelx:general>
                </bpelx:annotation>
                <sequence name="Sequence1">
                    <assign name="AssignStoreInvoiceStatus">
                        <copy>
                            <from variable="docStatusVariable"
                                  query="/ns2:documentStatus"/>
                            <to variable="storeInvoiceStatusJMSInputVariable"
                                part="body" query="/ns2:documentStatus"/>
                        </copy>
                    </assign>
                    <invoke name="InvokeStoreInvoiceStatusJMS"
                            bpelx:invokeAsDetail="no"
                            inputVariable="storeInvoiceStatusJMSInputVariable"
                            partnerLink="StoreInvoiceStatusJMSAdapter"
                            portType="ns4:Produce_Message_ptt"
                            operation="Produce_Message"/>
                </sequence>
            </case>
        </switch>
    </sequence>
</process>