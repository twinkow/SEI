<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue Apr 09 19:32:52 WEST 2013
  Author:  oracle
  Type: BPEL 1.1 Process
  Purpose: One Way BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="PopulateMedicineStockBPELProcess"
               targetNamespace="http://xmlns.oracle.com/SeiLessons/HSN_PopulateMedicineStock/PopulateMedicineStockBPELProcess"
               xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
               xmlns:client="http://xmlns.oracle.com/SeiLessons/HSN_PopulateMedicineStock/PopulateMedicineStockBPELProcess"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/file/SeiLessons/HSN-PopulateMedicineStock/ReceiveMedicineStock"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/SeiLessons/HSN-PopulateMedicineStock/MedicineStockDBAdapter"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns3="http://TargetNamespace.com/MedicinesStockPopulate"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/top/MedicineStockDBAdapter">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="populatemedicinestockbpelprocess_client" partnerLinkType="client:PopulateMedicineStockBPELProcess" myRole="PopulateMedicineStockBPELProcessProvider"/>
    <partnerLink name="ReceiveMedicineStock" partnerLinkType="ns1:ReadFile_plt"
                 myRole="ReadFile_role"/>
    <partnerLink name="MedicineStockDBAdapter"
                 partnerLinkType="ns2:MedicineStockDBAdapter_plt"
                 partnerRole="MedicineStockDBAdapter_role"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:ReadFile_msg"/>
    <variable name="medciineStockDBInputVariable"
              messageType="ns2:MedicamentosstockCollection_msg"/>
    <variable name="LoopVariable" type="xsd:int"/>
    <variable name="Variable1" messageType="ns1:ReadFile_msg"/>
    <variable name="quantityVariable" type="xsd:int"/>
    <variable name="existencesVariable" type="xsd:int"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in PopulateMedicineStockBPELProcess.wsdl) -->
    <receive name="receiveInput" variable="inputVariable" createInstance="yes"
             partnerLink="ReceiveMedicineStock" portType="ns1:ReadFile_ptt"
             operation="ReadFile"/>
    <assign name="AssignLoopVariable">
      <copy>
        <from expression="1"/>
        <to variable="LoopVariable"/>
      </copy>
    </assign>
    <while name="WhileExistMedicines"
           condition="bpws:getVariableData('LoopVariable') &lt;= ora:countNodes('inputVariable','body','/ns3:Root-Element/ns3:medicine')">
      <sequence name="Sequence1">
        <assign name="AssignMedicine">
          <copy>
            <from expression="ora:getElement('inputVariable','body','/ns3:Root-Element/ns3:medicine', bpws:getVariableData('LoopVariable'))"/>
            <to variable="Variable1" part="body"
                query="/ns3:Root-Element/ns3:medicine"/>
          </copy>
        </assign>
        <assign name="AssignMedicineToDBFormat">
          <copy>
            <from variable="Variable1" part="body"
                  query="/ns3:Root-Element/ns3:medicine/ns3:C1"/>
            <to variable="medciineStockDBInputVariable"
                part="MedicamentosstockCollection"
                query="/ns4:MedicamentosstockCollection/ns4:Medicamentosstock/ns4:substancia"/>
          </copy>
          <copy>
            <from variable="Variable1" part="body"
                  query="/ns3:Root-Element/ns3:medicine/ns3:C2"/>
            <to variable="medciineStockDBInputVariable"
                part="MedicamentosstockCollection"
                query="/ns4:MedicamentosstockCollection/ns4:Medicamentosstock/ns4:nome"/>
          </copy>
          <copy>
            <from variable="Variable1" part="body"
                  query="/ns3:Root-Element/ns3:medicine/ns3:C3"/>
            <to variable="medciineStockDBInputVariable"
                part="MedicamentosstockCollection"
                query="/ns4:MedicamentosstockCollection/ns4:Medicamentosstock/ns4:dose"/>
          </copy>
          <copy>
            <from expression="4"/>
            <to variable="medciineStockDBInputVariable"
                part="MedicamentosstockCollection"
                query="/ns4:MedicamentosstockCollection/ns4:Medicamentosstock/ns4:quantidadeexistente"/>
          </copy>
          <copy>
            <from expression="2"/>
            <to variable="medciineStockDBInputVariable"
                part="MedicamentosstockCollection"
                query="/ns4:MedicamentosstockCollection/ns4:Medicamentosstock/ns4:quantidadecritica"/>
          </copy>
        </assign>
        <invoke name="InvokeMedciineStockDB" bpelx:invokeAsDetail="no"
                inputVariable="medciineStockDBInputVariable"
                partnerLink="MedicineStockDBAdapter"
                portType="ns2:MedicineStockDBAdapter_ptt" operation="merge"/>
        <assign name="IncrementLoopVariable">
          <copy>
            <from expression="bpws:getVariableData('LoopVariable') + 1"/>
            <to variable="LoopVariable"/>
          </copy>
        </assign>
      </sequence>
    </while>
  </sequence>
</process>